__author__ = 'johan'

# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.

fib_cache = [0, 1]

def get_or_calc_fibonacci(index):
    cache_size = len(fib_cache)

    if cache_size > index:
        return fib_cache[index]

    for i in range(cache_size, index + 1):
        fib_cache.append(fib_cache[i - 2] + fib_cache[i - 1])

    return fib_cache[index]

i = 2
result = 0

while fib_cache[-1] + fib_cache[-2] <= 4000000:
    temp = get_or_calc_fibonacci(i)
    i += 1

    if temp % 2 == 0:
        result += temp

print(result, fib_cache)
