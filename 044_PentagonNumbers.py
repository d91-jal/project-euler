# Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2.
# The first ten pentagonal numbers are:
#
# 1, 5, 12, 22, 35, 51, 70, 92, 117, 145
#
# It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.
#
# Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and
# D = |Pk − Pj| is minimised; what is the value of D?
#
# TODO: Improve performance!

from ProjectEuler.utils import get_pentagonals


# Loop over pentagonals, computing sum and difference of pairs and evaluate if those
# are also pentagonals. Loop using minimal offset between candidates, thus hitting the
# smallest possible answer first.
def find_candidates(size):
    pents = get_pentagonals(size)

    for h in range(0, size):
        for i in range(h, size):
            pent_sum = pents[i-h] + pents[i]
            pent_diff = pents[i] - pents[i-h]
            # print(i-h, i, pents[i-h], pents[i])

            if (pent_sum in pents) and (pent_diff in pents):
                print("Found ", pents[i-h], pents[i], "-->", pent_diff)
                return

        # print(h)
    print("Nothing found.")


find_candidates(10000)
